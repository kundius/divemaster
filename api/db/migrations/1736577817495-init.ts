import { MigrationInterface, QueryRunner } from "typeorm";

export class Init1736577817495 implements MigrationInterface {
    name = 'Init1736577817495'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`role\` (\`id\` int NOT NULL AUTO_INCREMENT, \`title\` varchar(255) NOT NULL, \`scope\` text NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`offer\` (\`id\` int NOT NULL AUTO_INCREMENT, \`remoteId\` varchar(255) NULL, \`title\` varchar(255) NULL, \`price\` int NOT NULL, \`rank\` int NOT NULL DEFAULT '0', \`productId\` int NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`option_value\` (\`id\` int NOT NULL AUTO_INCREMENT, \`content\` varchar(255) NOT NULL, \`optionId\` int NOT NULL, \`productId\` int NOT NULL, \`rank\` int NOT NULL DEFAULT '0', \`properties\` text NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`option\` (\`id\` int NOT NULL AUTO_INCREMENT, \`key\` varchar(255) NOT NULL, \`caption\` varchar(255) NOT NULL, \`type\` enum ('combo-boolean', 'combo-colors', 'combo-options', 'numberfield', 'textfield') NOT NULL, \`inFilter\` tinyint NOT NULL DEFAULT 0, \`rank\` int NOT NULL DEFAULT '0', UNIQUE INDEX \`IDX_e19ad52a146d46abb337f4346f\` (\`key\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`file\` (\`id\` int NOT NULL AUTO_INCREMENT, \`file\` varchar(255) NOT NULL, \`path\` varchar(255) NOT NULL, \`hash\` varchar(255) NOT NULL, \`type\` varchar(255) NOT NULL, \`size\` int NOT NULL, \`metadata\` text NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`category\` (\`id\` int NOT NULL AUTO_INCREMENT, \`remoteId\` varchar(255) NULL, \`title\` varchar(255) NOT NULL, \`longTitle\` varchar(255) NULL, \`alias\` varchar(255) NOT NULL, \`rank\` int NOT NULL DEFAULT '0', \`description\` text NULL, \`active\` tinyint NOT NULL DEFAULT 1, \`imageId\` int NULL, \`parentId\` int NULL, UNIQUE INDEX \`IDX_ef133f841a42f39ec1a75b96ce\` (\`alias\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`product_image\` (\`fileId\` int NOT NULL, \`productId\` int NOT NULL, \`rank\` int NOT NULL DEFAULT '0', \`active\` tinyint NOT NULL DEFAULT 1, PRIMARY KEY (\`fileId\`, \`productId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`brand\` (\`id\` int NOT NULL AUTO_INCREMENT, \`remoteId\` varchar(255) NULL, \`title\` varchar(255) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`product\` (\`id\` int NOT NULL AUTO_INCREMENT, \`remoteId\` varchar(255) NULL, \`title\` varchar(255) NOT NULL, \`longTitle\` varchar(255) NULL, \`alias\` varchar(255) NOT NULL, \`sku\` varchar(255) NULL, \`rank\` int NOT NULL DEFAULT '0', \`priceDecrease\` int NULL, \`description\` text NULL, \`specifications\` text NULL, \`exploitation\` text NULL, \`active\` tinyint NOT NULL DEFAULT 1, \`inStock\` tinyint NOT NULL DEFAULT 1, \`recent\` tinyint NOT NULL DEFAULT 0, \`favorite\` tinyint NOT NULL DEFAULT 0, \`brandId\` int NULL, UNIQUE INDEX \`IDX_afa492329cc228eb3fdd51d86f\` (\`alias\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`cart_product\` (\`id\` varchar(36) NOT NULL, \`cartId\` varchar(36) NOT NULL, \`productId\` int NOT NULL, \`quantity\` int UNSIGNED NOT NULL DEFAULT '1', \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`cart\` (\`id\` varchar(36) NOT NULL, \`userId\` int NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`REL_756f53ab9466eb52a52619ee01\` (\`userId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`user\` (\`id\` int NOT NULL AUTO_INCREMENT, \`email\` varchar(255) NOT NULL, \`name\` varchar(255) NOT NULL, \`password\` varchar(255) NOT NULL, \`active\` tinyint NOT NULL DEFAULT 1, \`discount\` int NOT NULL DEFAULT '0', \`roleId\` int NULL, UNIQUE INDEX \`IDX_e12875dfb3b1d92d7d7c5377e2\` (\`email\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`pickup_point\` (\`id\` varchar(36) NOT NULL, \`type\` enum ('cdek', 'store') NOT NULL, \`name\` varchar(255) NOT NULL, \`districtName\` varchar(255) NOT NULL, \`subjectName\` varchar(255) NOT NULL, \`cityType\` varchar(255) NOT NULL, \`cityName\` varchar(255) NOT NULL, \`fullAddress\` varchar(255) NOT NULL, \`shortAddress\` varchar(255) NOT NULL, \`phone\` varchar(255) NULL, \`email\` varchar(255) NULL, \`workTime\` varchar(255) NOT NULL, \`lat\` float NOT NULL, \`lon\` float NOT NULL, \`note\` varchar(255) NULL, \`isReception\` tinyint NOT NULL DEFAULT 0, \`isDressingRoom\` tinyint NOT NULL DEFAULT 0, \`allowedCod\` tinyint NOT NULL DEFAULT 0, \`haveCash\` tinyint NOT NULL DEFAULT 0, \`haveCashless\` tinyint NOT NULL DEFAULT 0, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`order_product\` (\`id\` int NOT NULL AUTO_INCREMENT, \`quantity\` int UNSIGNED NOT NULL, \`price\` int UNSIGNED NOT NULL, \`title\` varchar(255) NOT NULL, \`options\` text NULL, \`orderId\` int NULL, \`productId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`delivery\` (\`id\` int NOT NULL AUTO_INCREMENT, \`service\` enum ('Pickup', 'Shipping') NOT NULL, \`delivered\` tinyint NULL, \`address\` varchar(255) NOT NULL, \`recipient\` text NULL, \`orderId\` int NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`deliveredAt\` datetime NULL, UNIQUE INDEX \`REL_b37d51328f9ca210b573b19372\` (\`orderId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`order\` (\`id\` int NOT NULL AUTO_INCREMENT, \`hash\` varchar(255) NOT NULL, \`cost\` int UNSIGNED NOT NULL, \`composition\` text NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`userId\` int NULL, UNIQUE INDEX \`IDX_3ed3ed33c81e40c297d9c6f494\` (\`hash\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`payment\` (\`id\` int NOT NULL AUTO_INCREMENT, \`service\` enum ('Yookassa', 'UponCash') NOT NULL, \`paid\` tinyint NULL, \`link\` varchar(255) NULL, \`remoteId\` varchar(255) NULL, \`orderId\` int NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`paidAt\` datetime NULL, UNIQUE INDEX \`REL_d09d285fe1645cd2f0db811e29\` (\`orderId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`city\` (\`id\` varchar(36) NOT NULL, \`type\` varchar(255) NOT NULL, \`name\` varchar(255) NOT NULL, \`subject\` varchar(255) NOT NULL, \`district\` varchar(255) NOT NULL, \`lat\` float NOT NULL, \`lon\` float NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`blog_post\` (\`id\` int NOT NULL AUTO_INCREMENT, \`title\` varchar(255) NOT NULL, \`longTitle\` varchar(255) NULL, \`alias\` varchar(255) NOT NULL, \`content\` text NULL, \`readTime\` varchar(255) NULL, \`status\` enum ('published', 'draft', 'archived') NOT NULL DEFAULT 'draft', \`metadata\` text NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`imageId\` int NULL, UNIQUE INDEX \`IDX_b8f6b9a665993b1b4b7abf7cda\` (\`alias\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`blog_tag\` (\`id\` int NOT NULL AUTO_INCREMENT, \`name\` varchar(255) NOT NULL, \`alias\` varchar(255) NOT NULL, \`metadata\` text NULL, UNIQUE INDEX \`IDX_4e1e2c9b325cc91218352d344c\` (\`alias\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`offer_option_values\` (\`offerId\` int NOT NULL, \`optionValueId\` int NOT NULL, INDEX \`IDX_bc3752c2099f512f94a3b9aa99\` (\`offerId\`), INDEX \`IDX_6602b912631112245b7e7f638a\` (\`optionValueId\`), PRIMARY KEY (\`offerId\`, \`optionValueId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`category_options\` (\`optionId\` int NOT NULL, \`categoryId\` int NOT NULL, INDEX \`IDX_9e1ba3238b73eace1889b218ea\` (\`optionId\`), INDEX \`IDX_2f594ec911a46edd506101154b\` (\`categoryId\`), PRIMARY KEY (\`optionId\`, \`categoryId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`category_products\` (\`productId\` int NOT NULL, \`categoryId\` int NOT NULL, INDEX \`IDX_49783865a1f6736be7f2854dd2\` (\`productId\`), INDEX \`IDX_c46314c39c804b52464e094620\` (\`categoryId\`), PRIMARY KEY (\`productId\`, \`categoryId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`cart_product_option_values\` (\`cartProductId\` varchar(36) NOT NULL, \`optionValueId\` int NOT NULL, INDEX \`IDX_375ef969daa02792d687e9bd59\` (\`cartProductId\`), INDEX \`IDX_c57cac20e52a815b03b59ad79f\` (\`optionValueId\`), PRIMARY KEY (\`cartProductId\`, \`optionValueId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`blog_tag_posts\` (\`blogPostId\` int NOT NULL, \`blogTagId\` int NOT NULL, INDEX \`IDX_8ab783ed0df9d020ffaa3bb558\` (\`blogPostId\`), INDEX \`IDX_a8098dce830e03bc1230b3c6c3\` (\`blogTagId\`), PRIMARY KEY (\`blogPostId\`, \`blogTagId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`offer\` ADD CONSTRAINT \`FK_7bb476d64bd0c7abaa62ed62715\` FOREIGN KEY (\`productId\`) REFERENCES \`product\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`option_value\` ADD CONSTRAINT \`FK_2d7616b884ef55e6eb5af000f1d\` FOREIGN KEY (\`optionId\`) REFERENCES \`option\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`option_value\` ADD CONSTRAINT \`FK_15f11407cf576587fa1f6a36b39\` FOREIGN KEY (\`productId\`) REFERENCES \`product\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`category\` ADD CONSTRAINT \`FK_8a12e4cb68bc526f8d8e59efb12\` FOREIGN KEY (\`imageId\`) REFERENCES \`file\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`category\` ADD CONSTRAINT \`FK_d5456fd7e4c4866fec8ada1fa10\` FOREIGN KEY (\`parentId\`) REFERENCES \`category\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`product_image\` ADD CONSTRAINT \`FK_2f757f675fce1f6fdda0cf0ca1f\` FOREIGN KEY (\`fileId\`) REFERENCES \`file\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product_image\` ADD CONSTRAINT \`FK_40ca0cd115ef1ff35351bed8da2\` FOREIGN KEY (\`productId\`) REFERENCES \`product\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product\` ADD CONSTRAINT \`FK_bb7d3d9dc1fae40293795ae39d6\` FOREIGN KEY (\`brandId\`) REFERENCES \`brand\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`cart_product\` ADD CONSTRAINT \`FK_139f8024067696fe5a8400ebda2\` FOREIGN KEY (\`cartId\`) REFERENCES \`cart\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`cart_product\` ADD CONSTRAINT \`FK_4f1b0c66f4e0b4610e14ca42e5c\` FOREIGN KEY (\`productId\`) REFERENCES \`product\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`cart\` ADD CONSTRAINT \`FK_756f53ab9466eb52a52619ee019\` FOREIGN KEY (\`userId\`) REFERENCES \`user\`(\`id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`user\` ADD CONSTRAINT \`FK_c28e52f758e7bbc53828db92194\` FOREIGN KEY (\`roleId\`) REFERENCES \`role\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_product\` ADD CONSTRAINT \`FK_3fb066240db56c9558a91139431\` FOREIGN KEY (\`orderId\`) REFERENCES \`order\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_product\` ADD CONSTRAINT \`FK_073c85ed133e05241040bd70f02\` FOREIGN KEY (\`productId\`) REFERENCES \`product\`(\`id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`delivery\` ADD CONSTRAINT \`FK_b37d51328f9ca210b573b19372c\` FOREIGN KEY (\`orderId\`) REFERENCES \`order\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order\` ADD CONSTRAINT \`FK_caabe91507b3379c7ba73637b84\` FOREIGN KEY (\`userId\`) REFERENCES \`user\`(\`id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`payment\` ADD CONSTRAINT \`FK_d09d285fe1645cd2f0db811e293\` FOREIGN KEY (\`orderId\`) REFERENCES \`order\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`blog_post\` ADD CONSTRAINT \`FK_fb86aba3b3fdb50278131d3e325\` FOREIGN KEY (\`imageId\`) REFERENCES \`file\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`offer_option_values\` ADD CONSTRAINT \`FK_bc3752c2099f512f94a3b9aa99d\` FOREIGN KEY (\`offerId\`) REFERENCES \`offer\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`offer_option_values\` ADD CONSTRAINT \`FK_6602b912631112245b7e7f638a8\` FOREIGN KEY (\`optionValueId\`) REFERENCES \`option_value\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`category_options\` ADD CONSTRAINT \`FK_9e1ba3238b73eace1889b218eac\` FOREIGN KEY (\`optionId\`) REFERENCES \`option\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`category_options\` ADD CONSTRAINT \`FK_2f594ec911a46edd506101154bf\` FOREIGN KEY (\`categoryId\`) REFERENCES \`category\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`category_products\` ADD CONSTRAINT \`FK_49783865a1f6736be7f2854dd21\` FOREIGN KEY (\`productId\`) REFERENCES \`product\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`category_products\` ADD CONSTRAINT \`FK_c46314c39c804b52464e0946201\` FOREIGN KEY (\`categoryId\`) REFERENCES \`category\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`cart_product_option_values\` ADD CONSTRAINT \`FK_375ef969daa02792d687e9bd59c\` FOREIGN KEY (\`cartProductId\`) REFERENCES \`cart_product\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`cart_product_option_values\` ADD CONSTRAINT \`FK_c57cac20e52a815b03b59ad79f7\` FOREIGN KEY (\`optionValueId\`) REFERENCES \`option_value\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`blog_tag_posts\` ADD CONSTRAINT \`FK_8ab783ed0df9d020ffaa3bb558a\` FOREIGN KEY (\`blogPostId\`) REFERENCES \`blog_post\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`blog_tag_posts\` ADD CONSTRAINT \`FK_a8098dce830e03bc1230b3c6c3a\` FOREIGN KEY (\`blogTagId\`) REFERENCES \`blog_tag\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`blog_tag_posts\` DROP FOREIGN KEY \`FK_a8098dce830e03bc1230b3c6c3a\``);
        await queryRunner.query(`ALTER TABLE \`blog_tag_posts\` DROP FOREIGN KEY \`FK_8ab783ed0df9d020ffaa3bb558a\``);
        await queryRunner.query(`ALTER TABLE \`cart_product_option_values\` DROP FOREIGN KEY \`FK_c57cac20e52a815b03b59ad79f7\``);
        await queryRunner.query(`ALTER TABLE \`cart_product_option_values\` DROP FOREIGN KEY \`FK_375ef969daa02792d687e9bd59c\``);
        await queryRunner.query(`ALTER TABLE \`category_products\` DROP FOREIGN KEY \`FK_c46314c39c804b52464e0946201\``);
        await queryRunner.query(`ALTER TABLE \`category_products\` DROP FOREIGN KEY \`FK_49783865a1f6736be7f2854dd21\``);
        await queryRunner.query(`ALTER TABLE \`category_options\` DROP FOREIGN KEY \`FK_2f594ec911a46edd506101154bf\``);
        await queryRunner.query(`ALTER TABLE \`category_options\` DROP FOREIGN KEY \`FK_9e1ba3238b73eace1889b218eac\``);
        await queryRunner.query(`ALTER TABLE \`offer_option_values\` DROP FOREIGN KEY \`FK_6602b912631112245b7e7f638a8\``);
        await queryRunner.query(`ALTER TABLE \`offer_option_values\` DROP FOREIGN KEY \`FK_bc3752c2099f512f94a3b9aa99d\``);
        await queryRunner.query(`ALTER TABLE \`blog_post\` DROP FOREIGN KEY \`FK_fb86aba3b3fdb50278131d3e325\``);
        await queryRunner.query(`ALTER TABLE \`payment\` DROP FOREIGN KEY \`FK_d09d285fe1645cd2f0db811e293\``);
        await queryRunner.query(`ALTER TABLE \`order\` DROP FOREIGN KEY \`FK_caabe91507b3379c7ba73637b84\``);
        await queryRunner.query(`ALTER TABLE \`delivery\` DROP FOREIGN KEY \`FK_b37d51328f9ca210b573b19372c\``);
        await queryRunner.query(`ALTER TABLE \`order_product\` DROP FOREIGN KEY \`FK_073c85ed133e05241040bd70f02\``);
        await queryRunner.query(`ALTER TABLE \`order_product\` DROP FOREIGN KEY \`FK_3fb066240db56c9558a91139431\``);
        await queryRunner.query(`ALTER TABLE \`user\` DROP FOREIGN KEY \`FK_c28e52f758e7bbc53828db92194\``);
        await queryRunner.query(`ALTER TABLE \`cart\` DROP FOREIGN KEY \`FK_756f53ab9466eb52a52619ee019\``);
        await queryRunner.query(`ALTER TABLE \`cart_product\` DROP FOREIGN KEY \`FK_4f1b0c66f4e0b4610e14ca42e5c\``);
        await queryRunner.query(`ALTER TABLE \`cart_product\` DROP FOREIGN KEY \`FK_139f8024067696fe5a8400ebda2\``);
        await queryRunner.query(`ALTER TABLE \`product\` DROP FOREIGN KEY \`FK_bb7d3d9dc1fae40293795ae39d6\``);
        await queryRunner.query(`ALTER TABLE \`product_image\` DROP FOREIGN KEY \`FK_40ca0cd115ef1ff35351bed8da2\``);
        await queryRunner.query(`ALTER TABLE \`product_image\` DROP FOREIGN KEY \`FK_2f757f675fce1f6fdda0cf0ca1f\``);
        await queryRunner.query(`ALTER TABLE \`category\` DROP FOREIGN KEY \`FK_d5456fd7e4c4866fec8ada1fa10\``);
        await queryRunner.query(`ALTER TABLE \`category\` DROP FOREIGN KEY \`FK_8a12e4cb68bc526f8d8e59efb12\``);
        await queryRunner.query(`ALTER TABLE \`option_value\` DROP FOREIGN KEY \`FK_15f11407cf576587fa1f6a36b39\``);
        await queryRunner.query(`ALTER TABLE \`option_value\` DROP FOREIGN KEY \`FK_2d7616b884ef55e6eb5af000f1d\``);
        await queryRunner.query(`ALTER TABLE \`offer\` DROP FOREIGN KEY \`FK_7bb476d64bd0c7abaa62ed62715\``);
        await queryRunner.query(`DROP INDEX \`IDX_a8098dce830e03bc1230b3c6c3\` ON \`blog_tag_posts\``);
        await queryRunner.query(`DROP INDEX \`IDX_8ab783ed0df9d020ffaa3bb558\` ON \`blog_tag_posts\``);
        await queryRunner.query(`DROP TABLE \`blog_tag_posts\``);
        await queryRunner.query(`DROP INDEX \`IDX_c57cac20e52a815b03b59ad79f\` ON \`cart_product_option_values\``);
        await queryRunner.query(`DROP INDEX \`IDX_375ef969daa02792d687e9bd59\` ON \`cart_product_option_values\``);
        await queryRunner.query(`DROP TABLE \`cart_product_option_values\``);
        await queryRunner.query(`DROP INDEX \`IDX_c46314c39c804b52464e094620\` ON \`category_products\``);
        await queryRunner.query(`DROP INDEX \`IDX_49783865a1f6736be7f2854dd2\` ON \`category_products\``);
        await queryRunner.query(`DROP TABLE \`category_products\``);
        await queryRunner.query(`DROP INDEX \`IDX_2f594ec911a46edd506101154b\` ON \`category_options\``);
        await queryRunner.query(`DROP INDEX \`IDX_9e1ba3238b73eace1889b218ea\` ON \`category_options\``);
        await queryRunner.query(`DROP TABLE \`category_options\``);
        await queryRunner.query(`DROP INDEX \`IDX_6602b912631112245b7e7f638a\` ON \`offer_option_values\``);
        await queryRunner.query(`DROP INDEX \`IDX_bc3752c2099f512f94a3b9aa99\` ON \`offer_option_values\``);
        await queryRunner.query(`DROP TABLE \`offer_option_values\``);
        await queryRunner.query(`DROP INDEX \`IDX_4e1e2c9b325cc91218352d344c\` ON \`blog_tag\``);
        await queryRunner.query(`DROP TABLE \`blog_tag\``);
        await queryRunner.query(`DROP INDEX \`IDX_b8f6b9a665993b1b4b7abf7cda\` ON \`blog_post\``);
        await queryRunner.query(`DROP TABLE \`blog_post\``);
        await queryRunner.query(`DROP TABLE \`city\``);
        await queryRunner.query(`DROP INDEX \`REL_d09d285fe1645cd2f0db811e29\` ON \`payment\``);
        await queryRunner.query(`DROP TABLE \`payment\``);
        await queryRunner.query(`DROP INDEX \`IDX_3ed3ed33c81e40c297d9c6f494\` ON \`order\``);
        await queryRunner.query(`DROP TABLE \`order\``);
        await queryRunner.query(`DROP INDEX \`REL_b37d51328f9ca210b573b19372\` ON \`delivery\``);
        await queryRunner.query(`DROP TABLE \`delivery\``);
        await queryRunner.query(`DROP TABLE \`order_product\``);
        await queryRunner.query(`DROP TABLE \`pickup_point\``);
        await queryRunner.query(`DROP INDEX \`IDX_e12875dfb3b1d92d7d7c5377e2\` ON \`user\``);
        await queryRunner.query(`DROP TABLE \`user\``);
        await queryRunner.query(`DROP INDEX \`REL_756f53ab9466eb52a52619ee01\` ON \`cart\``);
        await queryRunner.query(`DROP TABLE \`cart\``);
        await queryRunner.query(`DROP TABLE \`cart_product\``);
        await queryRunner.query(`DROP INDEX \`IDX_afa492329cc228eb3fdd51d86f\` ON \`product\``);
        await queryRunner.query(`DROP TABLE \`product\``);
        await queryRunner.query(`DROP TABLE \`brand\``);
        await queryRunner.query(`DROP TABLE \`product_image\``);
        await queryRunner.query(`DROP INDEX \`IDX_ef133f841a42f39ec1a75b96ce\` ON \`category\``);
        await queryRunner.query(`DROP TABLE \`category\``);
        await queryRunner.query(`DROP TABLE \`file\``);
        await queryRunner.query(`DROP INDEX \`IDX_e19ad52a146d46abb337f4346f\` ON \`option\``);
        await queryRunner.query(`DROP TABLE \`option\``);
        await queryRunner.query(`DROP TABLE \`option_value\``);
        await queryRunner.query(`DROP TABLE \`offer\``);
        await queryRunner.query(`DROP TABLE \`role\``);
    }

}
